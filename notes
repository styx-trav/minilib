beautiful !!! they're all so gorgeous, also made my own complex nums going strong now. Here a given of the architecture i'd like to see ::

argvs ::
	single characters : m for mandel, j for julia, others for other kinds of fractals of course;
	c : given as two argvs, real then img (unforgiving atoi, dot for float);
	looper : given as a y/n, will loop trough every value of c constantly
	end : one arg, full int, max number of iterations;

in my struct ::
	center : current center of the fractal (0, 0), changed by the clicking of the mouse to any part of the screen;
	pixel : current scale pixel/axis (0.005), multed or divvied by the zoom feature;
	vert : (800), adjusted with the resize-redirect window;
	hor : (800), //
	c : complex_c, either chosen or looping (-1, -1 -> 1, 1 :: 0.001) throughout;
	the usuals : mlx/win/current_img/next_img(?)
	cap : (2) or chosen (affects speed as well);
	end : (100) or chosen (will affect the speed of the image rendering, esp for big images, will also affect the precision work (more black));
	equation : the chosen fractal equation (m, j, others);

calculations ::
	x : center - hor / 2, then < center + hor / 2 + hor % 2;
	y : center - vert / 2, then < center + vert / 2 + vert % 2;
	z : {x * pixel, y * pixel};
	color : decide on the color scheme (green, red, blue), then * scale and % 255, get_color for each;



//notes ::
- still need to try out the red cross closing thing, thought I had it and didn't;
- mandelbrot is just c as the changing variable (x, y), starting z as z0 = 0;
- might want to speed up those calculations by moving 2by2, 3by3, etc. play around find what feels good disp wise (feels slow rn);
- do the parsing (obv)
- find out other fractals we might like to do;
- compartmentalize to the max - makes it so much easier to read, i swear :: all hooks in the same func, parsing aside, separate equations in one and utils in another, colors excluded;
- find out how to work the zoom thing - clicking seems easy enough, id like to find out if we can measure how much zoom is needed :: also the window resize (??? cant find nothing on that, asking around);
